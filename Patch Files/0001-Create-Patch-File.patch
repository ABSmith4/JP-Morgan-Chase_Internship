From 927045adeb0d378add3db756f308b85bb7d088d5 Mon Sep 17 00:00:00 2001
From: Ahmad Smith <Smith.Ahmad3@gmail.com>
Date: Tue, 28 Sep 2021 22:27:59 -0400
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-39.pyc     | Bin 0 -> 1148 bytes
 __pycache__/client_test.cpython-39.pyc | Bin 0 -> 2110 bytes
 client3.py                             |  15 +++++++++++----
 client_test.py                         |  25 +++++++++++++++++++++++--
 4 files changed, 34 insertions(+), 6 deletions(-)
 create mode 100644 __pycache__/client3.cpython-39.pyc
 create mode 100644 __pycache__/client_test.cpython-39.pyc

diff --git a/__pycache__/client3.cpython-39.pyc b/__pycache__/client3.cpython-39.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..4199e72dfdff64043f255c3af8c211c29cbef65f
GIT binary patch
literal 1148
zcmYjRzi%5i6ef?n)5(@>C5~gOUD%>S1;kO>EP;@wY3-yy(Hf3}3?*6|&c|o#;?teX
zql#LUCw1uDH3%RBUHT7o;Myrumrj}bNX15Yc)!TUr}sX7P}**<5M2NMd6@puB;+3#
zyuVr)JVvQ4Dn%46h@{>IGVqp3<}H_81u|4jMvANOHzFG<QVp~*G*x^W=)YkFRw0_x
zIo%^a{VrR;7Hyy}*B0v#E;_&${E}SKOS-t>th|{MxdAsZ_mR8>4Y)O@KXSP#Z_6#Y
z4co8*n-2+eRTDN}5w!xhQLn-l>K1IHZoh8MDJ5sWV9pxEu%Xtw1a+rN=D{oSI`F68
zDf*oBZoI+y$o}-Bp)un@zh6{YS`4e&3?AHjaIb$h0e${uuD<y7BL9yPlA&C$5Iv5v
zi&8&EHA9@b<boRK1zn;T{vy2ye9W(7HVbBKi>UBJa=~ZRMKgZPv72Z*5C^(alMF;!
z6rws7W(cALP@u%mX)%FXm`a>L2|6{HBvfkBag~=w*swNLc4`}@8Yf4&vf)_g87$+p
zK7A8li#=+?<DyDUFSOy=q%xr0wr%2tWSQT@+@-7Cbbk@OistR-{TDUpy8l!|Jv`8P
znL+>CgYS2D3}nL{gO_$b+ZmtV?`K60rMZ81d~RDOVD_-V1K%K4sXgmhOgs3ssBYt4
z<{G$K3>_DHOt;aQQALqMEfqXRRA&@13ufr|*z{xZ4H$tq<ds9pcb}vpE!8{!NND$7
z`+k5PlZ|&NSI&_Q{cV4~RF3yH#<mY#*&ar9jEeA>@*ocMx<5~nQJR-YGHpC_5GpZk
ziqwct5yZhXx+4&b!8E?JY-8}2_NI}qCoKEw>s`zCo;>Y+AlD|kDDtDb8jxnSk<l`?
z+~gyW{AFF0GSWCsHIm`87f%j<uyo%;cHKsqjvz@a&+#4IFy#qYn%EFuSk<y|Rk?wc
zt1*-|I<E96HI{2gm5n?BY8iQ4YV9WVbkO*hK(u=+PXW)Q(!2+gV}xE}^>BoIE#T26
bZq))+O#R0=L&TbKD`p)k7{}cX$|u49!<r&(

literal 0
HcmV?d00001

diff --git a/__pycache__/client_test.cpython-39.pyc b/__pycache__/client_test.cpython-39.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..2c27a58ae717a5f76dca05d1ebd1188d32938b98
GIT binary patch
literal 2110
zcmdT^&2Jk;6rb6ztnJvPX&_AkZ75JM;KX*)Sg9g#;`BoZtfUQ>mD1I+GjSHLKQg;6
zB#KXIFZ>NXv<D8pAaUcw8KL$c*c;*yMWFrxIaItiPKceP6poCwzj-s`_vZcH$2iGk
zoWS_`m%GmQCLzD$qIYPpD8d)a0x-g;Pb{1jpRSTygsDt>K$ynK*UGMHsa#`vRS|hk
z9_vpCh5z3rX=5LBNjXg;`k{+r?@(Y-gfEx@;KZVgSPG*|c|a_+Yu*B*%z(Ad2AB!6
z!D1{9^8ibL`N1e&@;zP;S9uV+6wDkA6$GSLf-m?E0PQmMk;0@!DS<^6d!(~COB|jI
zvgF}O3QsCZo9@shvUa<z?2yMKq&vzkeC*sP0eo$gu=7$H`dd1+H$vEjak8#GQ7GA*
zX9T<+E?1sCh4J~l;{LnfT1ScWrtn-IX@R%R561G@+*~G`&*X9w`TX_l?DgsF<h4S6
z=Gye$<%fT){B#KvYoK_L%1-98b9056*||cYkc-rX#ZpI)2Es<uc7m!E3%wdd#;G;C
zdtZ4hQsC2ru;Ets{sdDGt6&UMy?6V!?cpE3Su5_Zz$#LgZrl{-K@#T>41^TGK4uL(
zPB=lpMR;Sg<@nZMg@;Q{=qxw9de~8c2lv-4W3$x=d0^>s?hx@Ns2<EteF=)e)J?&I
zjb-80T|V{M@)xB{$lZ-h2ySO`nda8?lq)l9gN1OixfM;IVE0~RyN>U+d?(~!#^pL#
z4`fLzV|46=rkiy8qvP_Je3kzHu6~}b6$NHaAaemNOhgO;V;~X;g9u54A%qJE!w9b<
zyn%2=ip2;XTtpZ{z_fMYEs&zzs{*;`v0H*eTEyyxQ(p+GST`p#GyfklbIM>}sxSmt
zp0d^RAYiL|v`z5|fmvaCTRm)F%BXBub(HKXJ1RD%Y)PXmW7X};k5`H^HkEZ8#+_m%
z_UlOI$M*A2JBk>E3oH}L@QxFDjkG4lVIxY&n8+qx=v^#YDgJGfyCG-xeaCO{lfg_L
z1yh<s;{hg;P!oO{-M)B6nB-qig#e2{hTsYa4CyOCog7n#x2u=3THcfV*6$SszMNtL
zpws0e-o_0yWTjjubT@3yD!k-C<DMvn@jm};=H2&#MtyP1;-YaG^bgr+zy;V`eHoj6
z#ed0-{sXrzC45~aFYz8qCw#xs?|ZG~hhEe7fUtK&0oD2`WL`?)Ed6rYj7;0EJ2h_G
zQQWp`4c78e9<*(II=d(061s=+67L{fMR*_K*kvhU0}2%Yi(a-A)Je=tn1*S{eY~ya
zcy-%O8<yFsdm)mv23+}=PDkb{EM+3miueE^(oo^7n<8_*>+dI6ATkbcoida*>0e4!
B0MY;e

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..e8bf8f6 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,19 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price) / 2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if (price_b == 0):
+		return
+
+	ratio = price_a / price_b
+
+	return ratio
 
 # Main
 if __name__ == "__main__":
@@ -52,8 +57,10 @@ if __name__ == "__main__":
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices = {}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+			prices[stock] = price
+			print (f"Quoted {stock} at (bid:{bid_price}, ask:{ask_price}, price:{price})")
 
-		print ("Ratio %s" % getRatio(price, price))
+		print (f"Ratio {getRatio((prices['ABC']), (prices['DEF']))}")
diff --git a/client_test.py b/client_test.py
index af2bf26..b1f458d 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import *
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,10 +17,29 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
   """ ------------ Add more unit tests ------------ """
 
+  def test_getRatio(self): #Basic funcionality
+    test_priceA = {'ABC': 68.7}
+    test_priceB = {'DEF': 72.1 }
+    expected_value = (68.7 / 72.1)
+    self.assertEqual((getRatio((test_priceA['ABC']), (test_priceB['DEF']))), expected_value)
+
+  def test_getRatio_divisonByZero(self): #When price B is zero
+    test_priceA = 121.6
+    test_priceB = 0
+    expected_value = None
+    self.assertEqual(getRatio(test_priceA, test_priceB), (expected_value))
+      
+  def test_getRatio_multiplicationByZero(self): #When price A is zero
+    test_priceA = 0
+    test_priceB = 121.6
+    expected_value = 0
+    self.assertEqual(getRatio(test_priceA, test_priceB), (expected_value)) 
+    
 
 
 if __name__ == '__main__':
-- 
2.31.0

